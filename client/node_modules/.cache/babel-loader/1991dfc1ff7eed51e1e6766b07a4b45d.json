{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n//export const createProfile = (formData, history , edit = false) =>\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post('/api/profile', formData, config); //const res = await api.post('/profile', formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch( //setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        //history.push('/dashboard');\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // Add Experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    //const res = await api.put('/profile/experience', formData);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success')); //history.push('/dashboard');\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    //const res = await api.put('/profile/experience', formData);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success')); //history.push('/dashboard');\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/adam3/OneDrive/Bureau/BattleMern/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","navigate","edit","config","headers","post","errors","forEach","error","addExperience","put","addEducation"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\n\r\n//export const createProfile = (formData, history , edit = false) =>\r\nexport const createProfile = (formData, navigate, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {'Content-Type': 'application/json'}\r\n        };\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        \r\n        //const res = await api.post('/profile', formData);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(\r\n        //setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n      );\r\n\r\n      if (!edit) {\r\n        //history.push('/dashboard');\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Add Experience\r\nexport const addExperience = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    //const res = await api.put('/profile/experience', formData);\r\n\r\n    const config = {\r\n      headers: {'Content-Type': 'application/json'}\r\n    };\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n    //history.push('/dashboard');\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n  // Add Education\r\nexport const addEducation = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    //const res = await api.put('/profile/experience', formData);\r\n\r\n    const config = {\r\n      headers: {'Content-Type': 'application/json'}\r\n    };\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n    //history.push('/dashboard');\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}