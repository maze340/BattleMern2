{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR } from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n//export const createProfile = (formData, navigate, edit = false) =>\n\nexport const createProfile = function (formData, history) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post('/api/profile', formData, config); //const res = await api.post('/profile', formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch( //setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      setAlert(edit ? 'Profile Updated' : 'Profile Created'));\n\n      if (!edit) {\n        //navigate('/dashboard');\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/adam3/OneDrive/Bureau/BattleMern/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SACIC,WADJ,EAEIC,aAFJ,QAGO,SAHP,C,CAKA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,WADD;AAELO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,aADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAfM,C,CAiBP;AAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,UAACC,QAAD,EAAWC,OAAX;AAAA,MAAqBC,IAArB,uEAA4B,KAA5B;AAAA,SAC3B,MAAOd,QAAP,IAAoB;AAClB,QAAI;AACA,YAAMe,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AADE,OAAf;AAGA,YAAMf,GAAG,GAAG,MAAMN,KAAK,CAACsB,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCG,MAArC,CAAlB,CAJA,CAMA;;AAEFf,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,WADC;AAEPO,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAKAL,MAAAA,QAAQ,EACN;AACAJ,MAAAA,QAAQ,CAACkB,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,CAFF,CAAR;;AAKA,UAAI,CAACA,IAAL,EAAW;AACT;AACAD,QAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACD;AACF,KAtBD,CAsBE,OAAOZ,GAAP,EAAY;AACZ,YAAMa,MAAM,GAAGb,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBc,MAAjC;;AAEA,UAAIA,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAWrB,QAAQ,CAACJ,QAAQ,CAACyB,KAAK,CAACd,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEL,aADC;AAEPM,QAAAA,OAAO,EAAE;AAAEG,UAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,UAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,OAAD,CAAR;AAID;AACF,GApC0B;AAAA,CAAtB","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n};\r\n\r\n// Create or update profile\r\n\r\n//export const createProfile = (formData, navigate, edit = false) =>\r\nexport const createProfile = (formData, history , edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {'Content-Type': 'application/json'}\r\n        };\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        \r\n        //const res = await api.post('/profile', formData);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(\r\n        //setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n        setAlert(edit ? 'Profile Updated' : 'Profile Created')\r\n      );\r\n\r\n      if (!edit) {\r\n        //navigate('/dashboard');\r\n        history.push('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}