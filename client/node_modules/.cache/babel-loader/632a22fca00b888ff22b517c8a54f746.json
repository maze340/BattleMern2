{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adam3\\\\OneDrive\\\\Bureau\\\\BattleMern\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    getCurrentProfile,\n    //deleteAccount,\n    auth: {\n      user\n    },\n    profile: {\n      profile,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getCurrentProfile();\n  }, [\n    /*getCurrentProfile*/\n  ]); // return (\n  //     <section className=\"container\">\n  //         <div>\n  //             Dashboard\n  //         </div>\n  //         <p className=\"lead\">\n  //             <i className=\"fas fa-user\" /> Welcome\n  //         </p>\n  //         <p>This space is  allowed only for private members</p>\n  //     </section>\n  // )\n\n  return loading && profile == null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 41\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"has\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) //     <>\n    //       <DashboardActions />\n    //       <Experience experience={profile.experience} />\n    //       <Education education={profile.education} />\n    //       <div className=\"my-2\">\n    //         <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n    //           <i className=\"fas fa-user-minus\" /> Delete My Account\n    //         </button>\n    //       </div>\n    //     </>\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, please add some info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) // ) : ( \n    //     <Fragment>\n    //        <p>You have not yet setup a profile, please add some info</p>\n    //        <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n    //             Create Profile\n    //        </Link>\n    //     </Fragment>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 55\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  // deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n  /*, deleteAccount*/\n\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/adam3/OneDrive/Bureau/BattleMern/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","getCurrentProfile","Spinner","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAGA,MAAMC,SAAS,GAAG,QAKV;AAAA;;AAAA,MALW;AACfF,IAAAA,iBADe;AAEf;AACAG,IAAAA,IAAI,EAAG;AAAEC,MAAAA;AAAF,KAHQ;AAIfC,IAAAA,OAAO,EAAG;AAAEA,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAJK,GAKX;AAEJV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AAClB,GAFM,EAEJ;AAAC;AAAD,GAFI,CAAT,CAFI,CAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOM,OAAO,IAAID,OAAO,IAAI,IAAtB,gBAA6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA7B,gBAA2C,QAAC,QAAD;AAAA,4BAC9C;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD8C,eAE9C;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAC2CD,IAAI,IAAIA,IAAI,CAACG,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAF8C,EAK7CF,OAAO,KAAK,IAAZ,gBACG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAEL;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAZK,mBAcD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAdC,CAoBD;AACA;AACA;AACA;AACA;AACA;AACA;AA/B8C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlD;AAkCH,CAxDD;;GAAMH,S;;KAAAA,S;AAyDNA,SAAS,CAACM,SAAV,GAAsB;AAClBR,EAAAA,iBAAiB,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADhB;AAElB;AACAP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAHL;AAIlBL,EAAAA,OAAO,EAAER,SAAS,CAACc,MAAV,CAAiBD;AAJR,CAAtB;;AAOE,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADsB;AAElCE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFmB,CAAZ,CAAxB;;AAKF,eAAeN,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAiB;;AAAnB,CAAlB,CAAP,CAAmEE,SAAnE,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\n\nconst Dashboard = ({\n    getCurrentProfile,\n    //deleteAccount,\n    auth : { user },\n    profile : { profile, loading }\n  }) => {\n\n    useEffect(() => {\n        getCurrentProfile();\n      }, [/*getCurrentProfile*/]);    \n\n    // return (\n    //     <section className=\"container\">\n    //         <div>\n    //             Dashboard\n    //         </div>\n    //         <p className=\"lead\">\n    //             <i className=\"fas fa-user\" /> Welcome\n    //         </p>\n    //         <p>This space is  allowed only for private members</p>\n    //     </section>\n    // )\n    return loading && profile == null ? <Spinner /> : <Fragment> \n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\" /> Welcome {user && user.name}\n        </p> \n        {profile !== null ? (\n            <Fragment>has</Fragment>\n    //     <>\n    //       <DashboardActions />\n    //       <Experience experience={profile.experience} />\n    //       <Education education={profile.education} />\n\n    //       <div className=\"my-2\">\n    //         <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n    //           <i className=\"fas fa-user-minus\" /> Delete My Account\n    //         </button>\n    //       </div>\n    //     </>\n      ) : (\n        <>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </>\n        // ) : ( \n        //     <Fragment>\n        //        <p>You have not yet setup a profile, please add some info</p>\n        //        <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n        //             Create Profile\n        //        </Link>\n        //     </Fragment>\n        )}\n    </Fragment>;\n};\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    // deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile\n  });\n\nexport default connect(mapStateToProps, { getCurrentProfile/*, deleteAccount*/ })(Dashboard);\n\n"]},"metadata":{},"sourceType":"module"}